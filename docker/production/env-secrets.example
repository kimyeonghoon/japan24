# Docker Secrets Example
# Use Docker Secrets or Kubernetes Secrets to manage sensitive data in production

# Generate new app key:
# php artisan key:generate --show

# Strong passwords should include:
# - At least 16 characters
# - Mix of uppercase, lowercase, numbers, and symbols
# - No dictionary words

APP_KEY=base64:GENERATE_NEW_32_BYTE_BASE64_KEY_HERE

DB_PASSWORD=CHANGE_THIS_TO_STRONG_DB_PASSWORD_16_CHARS_MIN

REDIS_PASSWORD=CHANGE_THIS_TO_STRONG_REDIS_PASSWORD_16_CHARS_MIN

MAIL_PASSWORD=CHANGE_THIS_TO_MAIL_SERVICE_PASSWORD

# JWT Secret (if using JWT authentication)
JWT_SECRET=GENERATE_NEW_JWT_SECRET_32_CHARS_MIN

# Session Encryption Key (additional security)
SESSION_ENCRYPTION_KEY=GENERATE_NEW_ENCRYPTION_KEY_32_CHARS

# Database Encryption Key (for encrypted fields)
DB_ENCRYPTION_KEY=GENERATE_NEW_DB_ENCRYPTION_KEY_32_CHARS

# API Keys (if integrating with external services)
GOOGLE_MAPS_API_KEY=YOUR_GOOGLE_MAPS_API_KEY_HERE
SENDGRID_API_KEY=YOUR_SENDGRID_API_KEY_HERE

# Monitoring API Keys
SENTRY_DSN=YOUR_SENTRY_DSN_FOR_ERROR_TRACKING
NEW_RELIC_LICENSE_KEY=YOUR_NEW_RELIC_LICENSE_KEY